services:
  db:
    image: postgres:14-alpine
    env_file:
      - ../../.env
    environment:
      POSTGRES_DB: ckan
      POSTGRES_USER: ckan
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ckan -d ckan || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  solr:
    image: ckan/ckan-solr:2.10-solr8
    platform: linux/amd64

  redis:
    image: redis:6-alpine

  # One-time initializer: generate config, init DB, build index, create admin
  ckan-init:
    image: ckan/ckan-dev:2.10
    platform: linux/amd64
    depends_on:
      db:
        condition: service_healthy
      solr:
        condition: service_started
      redis:
        condition: service_started
    env_file:
      - ../../.env
    volumes:
      - ckan-config:/etc/ckan
      - ckan-storage:/var/lib/ckan
    command: >
      sh -euc '
      if [ ! -f /etc/ckan/ckan.ini ]; then
        ckan generate config /etc/ckan/ckan.ini;
      fi;
      ckan config-tool /etc/ckan/ckan.ini \
        "ckan.site_url=$CKAN_SITE_URL" \
        "sqlalchemy.url=postgresql://ckan:$POSTGRES_PASSWORD@db:5432/ckan" \
        "solr_url=http://solr:8983/solr/ckan" \
        "ckan.redis.url=redis://redis:6379/0" \
        "ckan.storage_path=/var/lib/ckan" \
        "ckan.plugins=image_view text_view resource_proxy" \
        "beaker.session.secret=$BEAKER_SESSION_SECRET" \
        "ckan.tracking_enabled=false";
      ckan -c /etc/ckan/ckan.ini db init;
      ckan -c /etc/ckan/ckan.ini search-index rebuild;
      if [ -n "$CKAN_SYSADMIN_NAME" ]; then
        ckan -c /etc/ckan/ckan.ini sysadmin add "$CKAN_SYSADMIN_NAME" email="$CKAN_SYSADMIN_EMAIL" password="$CKAN_SYSADMIN_PASSWORD" || true;
      fi'

  ckan:
    image: ckan/ckan-dev:2.10
    platform: linux/amd64
    depends_on:
      ckan-init:
        condition: service_completed_successfully
    env_file:
      - ../../.env
    environment:
      CKAN_INI: /etc/ckan/ckan.ini
    volumes:
      - ckan-config:/etc/ckan
      - ckan-storage:/var/lib/ckan
    ports:
      - "5001:5000"
    command: >
      sh -euc 'ckan -c /etc/ckan/ckan.ini run -H 0.0.0.0 -p 5000'

volumes:
  db-data:
  ckan-config:
  ckan-storage:
